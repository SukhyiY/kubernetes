apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.class: nginx
    nginx.org/client-max-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
  name: jenkins
  namespace: ingress-nginx
spec:
  rules:
  - host: yarik.avik.zp.ua
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins-master
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-master
  namespace: ingress-nginx
spec:
  type: NodePort
  selector:
    app: master
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-slaves
  namespace: ingress-nginx
spec:
  selector:
    app: master
  ports:
  - protocol: TCP
    port: 50000
    targetPort: 50000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  namespace: ingress-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: master
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
      - name: master
        image: jenkins/jenkins:latest
        ports:
        - containerPort: 8080
        - containerPort: 50000
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          periodSeconds: 30
          timeoutSeconds: 30
          successThreshold: 2
          failureThreshold: 5
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-pv-storage
        resources:
          limits:
            cpu: 500m
            memory: 1200Mi
          requests:
            cpu: 400m
            memory: 1100Mi
      volumes:
      - name: jenkins-pv-storage
        persistentVolumeClaim:
          claimName: jenkins-pvc
      securityContext:
        fsGroup: 0
        runAsUser: 0
